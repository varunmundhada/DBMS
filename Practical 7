Practical 7: Decimal to Binary Conversion Function
-- Function to convert decimal to binary
CREATE OR REPLACE FUNCTION decimal_to_binary(p_number IN NUMBER) RETURN VARCHAR2 IS
    v_binary VARCHAR2(100) := '';
    v_num NUMBER := p_number;
BEGIN
    IF v_num = 0 THEN
        RETURN '0';
    END IF;

    WHILE v_num > 0 LOOP
        v_binary := MOD(v_num, 2) || v_binary;
        v_num := TRUNC(v_num / 2);
    END LOOP;

    RETURN v_binary;
END decimal_to_binary;

-- Example execution
DECLARE 
    v_result VARCHAR2(100);
BEGIN
    v_result := decimal_to_binary(10);
    DBMS_OUTPUT.PUT_LINE('Binary Equivalent: ' || v_result);
END;

Practical 8: Bank Account Table and Fund Transfer Procedure

-- Table creation
CREATE TABLE Accounts (
    Account_ID NUMBER PRIMARY KEY,
    Account_Holder VARCHAR2(100),
    Balance NUMBER
);

-- Insert records
INSERT INTO Accounts VALUES (1, 'Alice Johnson', 5000);
INSERT INTO Accounts VALUES (2, 'Bob Brown', 3000);

COMMIT;

-- Procedure for transferring funds
CREATE OR REPLACE PROCEDURE Transfer_Funds (
    p_From_Account IN NUMBER,
    p_To_Account IN NUMBER,
    p_Amount IN NUMBER
) AS
    v_From_Balance NUMBER;
BEGIN
    -- Fetch current balance of the source account
    SELECT Balance INTO v_From_Balance FROM Accounts WHERE Account_ID = p_From_Account;

    -- Check if the source account has enough balance
    IF v_From_Balance < p_Amount THEN
        RAISE_APPLICATION_ERROR(-20001, 'Insufficient balance in source account.');
    END IF;

    -- Deduct amount from the source account
    UPDATE Accounts
    SET Balance = Balance - p_Amount
    WHERE Account_ID = p_From_Account;

    -- Add amount to the destination account
    UPDATE Accounts
    SET Balance = Balance + p_Amount
    WHERE Account_ID = p_To_Account;

    -- Commit the transaction
    COMMIT;

    DBMS_OUTPUT.PUT_LINE('Transaction successful. Amount transferred: ' || p_Amount);
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END Transfer_Funds;

-- Execute transfer procedure
SET SERVEROUTPUT ON;
EXEC Transfer_Funds(1, 2, 1000);

-- View updated table
SELECT * FROM Accounts;
